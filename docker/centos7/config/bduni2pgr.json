{
  "generation": {
    "general": {
      "id": "bduni2pgr",
      "logs": {
        "configFile": "sample_log_config.json"
      },
      "parallelization": {
        "threads": 4
      },
      "overwrite": true,
      "operation": "creation"
    },
    "bases": [
      {
        "id": "base_pivot",
        "type": "bdd",
        "configFile": "db_config_pivot.json"
      },
      {
        "id": "base_bduni",
        "type": "bdd",
        "configFile": "bduni_config.json"
      },
      {
        "id": "base_pgr",
        "type": "bdd",
        "configFile": "output_base.json"
      }
    ],
    "workingSpace": {
      "directory": "/var/tmp/",
      "baseId": "base_pivot"
    },
    "resource": {
      "ressourceId": "bduni",
      "type": "pgr",
      "description": "Données BDUNI v2.",
      "boundingBox": "-90,-180,90,180",
      "defaultProjection": "EPSG:4326",
      "availableProjection": [
        "EPSG:4326",
        "EPSG:2154"
      ],
      "topology": {
        "description": "Données issues de la BDUNI de l'IGN.",
        "storage": {
          "baseId": "base_pgr"
        },
        "projection": "EPSG:4326",
        "mapping": {
          "source": {
            "baseId": "base_bduni"
          },
          "storage": {
            "file": "bduni_convert.sql"
          }
        },
        "defaultAttributs": [
          "name"
        ]
      },
      "sources": [
        {
          "id": "pgrouting-test-reu-time",
          "type": "pgr",
          "storage": {
            "dbConfig": "/home/docker/app/src/config/dbs/db_config_test.json",
            "costColumn": "cost_s_car",
            "rcostColumn": "reverse_cost_s_car"
          },
          "cost": {
            "compute": {
              "storage": {
                "file": "/home/docker/data/costs_calculation_sample.json"
              }
            }
          }
        },
        {
          "id": "pgrouting-test-reu-length",
          "type": "pgr",
          "storage": {
            "dbConfig": "/home/docker/app/src/config/dbs/db_config_test.json",
            "costColumn": "cost_m_car",
            "rcostColumn": "reverse_cost_m_car"
          },
          "cost": {
            "compute": {
              "storage": {
                "file": "/home/docker/data/costs_calculation_sample.json"
              }
            }
          }
        }
      ],
      "operations": [
        {
          "id": "route",
          "rate": 10,
          "maxIntermediatePoints": 10,
          "maxNumberOfConstraints": 2,
          "constraints": [
            {
              "id": "filter-unique",
              "type": "filter-osrm",
              "description": "Type d'arc.",
              "key": "road_type",
              "values": [
                "autoroute",
                "tunnel"
              ],
              "availableConstraints": [
                "banned"
              ],
              "availableOperators": [
                "="
              ]
            }
          ],
          "defaultParameters": [
            {
              "id": "algorithm",
              "default": "contraction-hierarchies"
            },
            {
              "id": "format",
              "default": "application/json"
            },
            {
              "id": "getGeometry",
              "default": true
            },
            {
              "id": "getBbox",
              "default": true
            },
            {
              "id": "getInstructions",
              "default": false
            },
            {
              "id": "distanceUnit",
              "default": "kilometer"
            },
            {
              "id": "timeUnit",
              "default": "h-m-s"
            }
          ]
        },
        {
          "id": "nearest",
          "rate": 20,
          "maxNumber": 100,
          "defaultParameters": [
            {
              "id": "format",
              "default": "application/json"
            },
            {
              "id": "getId",
              "default": false
            },
            {
              "id": "number",
              "default": 1
            },
            {
              "id": "type",
              "default": "all"
            }
          ]
        }
      ]
    },
    "outputs": {
      "configuration": {
        "storage": {
          "file": "ressource_example_pgr.resource"
        }
      }
    }
  }
}
